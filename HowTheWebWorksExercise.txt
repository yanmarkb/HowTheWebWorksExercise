# ****How Web Works Exercise****

## **Part One: Solidify Terminology**

In your own terms, define the following terms:

- What is HTTP?

Hypertext Transfer Protocol. It is used for communicating between a web browser and a server.

- What is a URL?

Uniform Resource Locator. It is an address used to acces resources on the internet.

- What is DNS?

Domain Name System. It is a system that translate human-readable domain names into IP addresses.

- What is a query string?

A query string is part of a URL that passes information to a web server.  They are usually at the end of the URL.

- What are two HTTP verbs and how are they different?

Two HTTP verbs are GET (request data wit no side effect) and POST (request with side effect).

- What is an HTTP request?

And HTTP request is a message sent by a web browser to a server requesting a specific resource.

- What is an HTTP response?

An HTTP response is a message sent by the server to a client in response to an HTTP request.

- What is an HTTP header? Give a couple examples of request and response headers you have seen.

HTTP headers are additional pieces of info sent as a part of an HTTP request or response like type, lenght, caching instructions, and more.
Examples: Hostnames, date your browser thinks it is, language your browser wants, and cookies.


- What are the processes that happen when you type “http://somesite.com/some/page.html” into a browser?

Steps:
1. The browser uses the DNS lookup the domain name.
2. The browser connects to the server using the IP address and HTTP port.
3. The browser sens an HTTP GET with a specific path.
4. The server processes the request, retrieves the requested data and sends an HTTP response back to the browser.
5. The browser puts the we page together based on the response.

## ****Part Two: Practice Tools****

1. Using ***curl***, make a ***GET*** request to the *icanhazdadjoke.com* API to find all jokes involving the word “pirate”

curl -H "Accept: application/json" "https://icanhazdadjoke.com/search?term=pirate"

2. Use ***dig*** to find what the IP address is for *icanhazdadjoke.com*

dig +short icanhazdadjoke.com

3. Make a simple web page and serve it using ***python3 -m http.server***. Visit the page in a browser.

After making the HTML I got to terminal and I type python3 -m http.server in the directory with the HTML.

## **Part Three: Explore Dev Tools**

Build a very simple HTML form that uses the GET method (it can use the same page URL for the action) when the form is submitted.

Add a field or two to the form and, after submitting it, explore in Chrome Developer tools how you can view the request and response headers.

Edit the page to change the form type to POST, refresh in the browser and re-submit. Do you still see the field in the query string? Explore in Chrome how you can view the request and response headers, as well as the form data.

## **Part Four: Explore the URL API**

At times, it’s useful for your JavaScript to look at the URL of the browser window and change how the script works depending on parts of that (particularly the query string).

[Read about the URL API](https://developer.mozilla.org/en-US/docs/Web/API/URL)

Try some of the code examples in the Chrome Console so that you can get comfortable with the basic methods and properties for instances of the URL class.

[Solution](https://lessons.springboard.com/Solution-b90d1d16d5f043f79fa6524333d6f99b?pvs=21)